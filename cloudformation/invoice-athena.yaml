AWSTemplateFormatVersion: '2010-09-09'

Resources:
  AthenaInvoiceWorkgroup:
    Type: AWS::Athena::WorkGroup
    Properties:
      Name: !Sub ${AWS::StackName}-athena-invoice-workgroup
      WorkGroupConfiguration:
        EnforceWorkGroupConfiguration: true
        PublishCloudWatchMetricsEnabled: false
        ResultConfiguration:
          EncryptionConfiguration:
            EncryptionOption: SSE_KMS
            KmsKey: !GetAtt KmsKey.Arn
          OutputLocation: !Sub s3://${AthenaInvoiceQueryResultsBucket}/

  AthenaInvoiceQueryResultsBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub ${AWS::StackName}-athena-invoice-query-results
      VersioningConfiguration:
        Status: Enabled
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: aws:kms
              KMSMasterKeyID: !GetAtt KmsKey.Arn
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      LoggingConfiguration:
        DestinationBucketName: !Ref AthenaInvoiceAccessLogBucket
      LifecycleConfiguration:
        Rules:
          - ExpirationInDays: 7
            Status: Enabled

  AthenaInvoiceAccessLogBucket:
    # checkov:skip=CKV_AWS_18: This is the invoice access log bucket - no need for another
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub ${AWS::StackName}-athena-invoice-query-results-logs
      VersioningConfiguration:
        Status: Enabled
      AccessControl: LogDeliveryWrite
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: aws:kms
              KMSMasterKeyID: !GetAtt KmsKey.Arn

  InvoiceDB:
    Type: AWS::Glue::Database
    Properties:
      CatalogId: !Ref AWS::AccountId
      DatabaseInput:
        Name: !Sub ${AWS::StackName}-invoices

  InvoiceLineItemTable:
    Type: AWS::Glue::Table
    Properties:
      CatalogId: !Ref AWS::AccountId
      DatabaseName: !Ref InvoiceDB
      TableInput:
        Name: btm_invoices_standardised
        TableType: EXTERNAL_TABLE
        Parameters:
          has_encrypted_data: 'true'
        StorageDescriptor:
          Columns:
            - Name: invoice_receipt_id
              Type: string
            - Name: vendor_name
              Type: string
            - Name: total
              Type: decimal(10,2)
            - Name: invoice_receipt_date
              Type: date
            - Name: subtotal
              Type: decimal(10,2)
            - Name: due_date
              Type: date
            - Name: tax
              Type: decimal(10,2)
            - Name: tax_payer_id
              Type: string
            - Name: item_id
              Type: int
            - Name: item_description
              Type: string
            - Name: unit_price
              Type: decimal(10,2)
            - Name: quantity
              Type: int
            - Name: price
              Type: decimal(10,2)
          Compressed: 'true'
          InputFormat: org.apache.hadoop.mapred.TextInputFormat
          Location: !Sub s3://${StandardisedInvoiceDataBucket}/btm_invoices_standardised/
          StoredAsSubDirectories: false
          OutputFormat: org.apache.hadoop.hive.ql.io.IgnoreKeyTextOutputFormat
          SerdeInfo:
            Parameters:
              field.delim: ''
              ignore.malformed.json: true
              serialiazation.format: 1
            SerializationLibrary: org.openx.data.jsonserde.JsonSerDe

  InvoiceLineItemView:
    Type: Custom::AthenaView
    Properties:
      ServiceToken: !GetAtt CustomAthenaViewResourceFunction.Arn
      View:
        Database: !Ref InvoiceDB
        Name: !Sub ${AWS::StackName}-invoice-line-item-view
        Query: |
          SELECT
            YEAR(invoice_receipt_date) AS year_received,
            MONTH(invoice_receipt_date) AS month_received,
            vendor_name,
            invoice_receipt_id,
            quantity,
            unit_price,
            price AS invoiced_price,
            SUM(quantity * unit_price) AS calculated_price
          FROM btm_invoices_standardised
          GROUP BY invoice_receipt_id, vendor_name, invoice_receipt_date, item_id, quantity, unit_price, price
        Workgroup: !Ref AthenaInvoiceWorkgroup
