TransactionDB:
  Type: AWS::Glue::Database
  Properties:
    CatalogId: !Ref AWS::AccountId
    DatabaseInput:
      Name: btm-transactions-db

TransactionTable:
  Type: AWS::Glue::Table
  Properties:
    CatalogId: !Ref AWS::AccountId
    DatabaseName: !Ref TransactionDB
    TableInput:
      Name: btm_transactions
      TableType: EXTERNAL_TABLE
      Parameters:
        has_encrypted_data: "true"
        projection.enabled: "true"
        projection.datetime.type: date
        projection.datetime.range: "2022-01-01,NOW"
        projection.datetime.format: "yyyy-MM-dd"
        projection.datetime.interval: 1
        projection.datetime.interval.unit: DAYS
        storage.location.template:
          !Join [
            "",
            [
              "s3://",
              "di-btm-storagebucket-mhnazvovowiy",
              "/btm_transactions/${datetime}/",
            ],
          ]
      PartitionKeys:
        - { Name: "datetime", Type: date }
      StorageDescriptor:
        Columns:
          - { Name: "event_id", Type: string }
          - { Name: "event_name", Type: string }
          - { Name: "client_id", Type: string }
          - { Name: "timestamp", Type: timestamp }
          - { Name: "timestamp_formatted", Type: string }
          - { Name: "component_id", Type: string }
          - { Name: "user", Type: string }
          - { Name: "platform", Type: string }
          - { Name: "restricted", Type: string }
          - { Name: "extensions", Type: string }
        Compressed: true
        InputFormat: "org.apache.hadoop.mapred.TextInputFormat"
        Location:
          !Join ["", ["s3://", "di-btm-storagebucket-mhnazvovowiy", "/"]]
        StoredAsSubDirectories: false
        OutputFormat: "org.apache.hadoop.hive.ql.io.IgnoreKeyTextOutputFormat"
        SerdeInfo:
          Parameters:
            {
              "ignore.malformed.json": true,
              "serialiazation.format": 1,
              "field.delim": "",
            }
          SerializationLibrary: "org.openx.data.jsonserde.JsonSerDe"

AthenaQueryResultsBucket:
  Type: AWS::S3::Bucket
  Properties:
    VersioningConfiguration:
      Status: "Enabled"
    BucketEncryption:
      ServerSideEncryptionConfiguration:
        - ServerSideEncryptionByDefault:
            SSEAlgorithm: aws:kms
            KMSMasterKeyID: !GetAtt KmsKey.Arn
    PublicAccessBlockConfiguration:
      BlockPublicAcls: true
      BlockPublicPolicy: true
      IgnorePublicAcls: true
      RestrictPublicBuckets: true
    LoggingConfiguration:
      DestinationBucketName: !Ref AthenaAccessLogBucket
    LifecycleConfiguration:
      Rules:
        - ExpirationInDays: 7
          Status: Enabled

AthenaAccessLogBucket:
  # checkov:skip=CKV_AWS_18: This is the access log bucket - no need for another
  Type: "AWS::S3::Bucket"
  Properties:
    VersioningConfiguration:
      Status: Enabled
    AccessControl: LogDeliveryWrite
    PublicAccessBlockConfiguration:
      BlockPublicAcls: true
      BlockPublicPolicy: true
      IgnorePublicAcls: true
      RestrictPublicBuckets: true
    BucketEncryption:
      ServerSideEncryptionConfiguration:
        - ServerSideEncryptionByDefault:
            SSEAlgorithm: aws:kms
            KMSMasterKeyID: !GetAtt KmsKey.Arn

CalculationDataCrawlerRole:
  Type: AWS::IAM::Role
  Properties:
    AssumeRolePolicyDocument:
      Version: "2012-10-17"
      Statement:
        - Effect: "Allow"
          Principal:
            Service:
              - "glue.amazonaws.com"
          Action:
            - "sts:AssumeRole"
    ManagedPolicyArns:
      - "arn:aws:iam::aws:policy/service-role/AWSGlueServiceRole"
    Path: "/"

TransactionsCrawlerSecurityConfiguration:
  Type: AWS::Glue::SecurityConfiguration
  Properties:
    EncryptionConfiguration:
      CloudWatchEncryption:
        CloudWatchEncryptionMode: SSE-KMS
        KmsKeyArn: !GetAtt KmsKey.Arn
      JobBookmarksEncryption:
        JobBookmarksEncryptionMode: CSE-KMS
        KmsKeyArn: !GetAtt KmsKey.Arn
      S3Encryptions:
        - S3EncryptionMode: SSE-KMS
          KmsKeyArn: !GetAtt KmsKey.Arn
    Name: transactions-crawler-security-config

TransactionsCrawler:
  Type: AWS::Glue::Crawler
  Properties:
    CrawlerSecurityConfiguration: !Ref TransactionsCrawlerSecurityConfiguration
    DatabaseName: !Ref TransactionDB
    Description: Crawls the daily buckets of transaction data
    Name: btm-transactions-crawler
    Role: !GetAtt CalculationDataCrawlerRole.Arn
    SchemaChangePolicy:
      DeleteBehavior: LOG
      UpdateBehavior: UPDATE_IN_DATABASE
    Targets:
      S3Targets:
        - Path:
            !Join [
              "",
              [
                "s3://",
                "di-btm-storagebucket-mhnazvovowiy",
                "/btm_transactions",
              ],
            ]
