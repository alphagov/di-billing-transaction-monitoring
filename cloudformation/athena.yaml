AWSTemplateFormatVersion: '2010-09-09'

Resources:
  TransactionDB:
    Type: AWS::Glue::Database
    Properties:
      CatalogId: !Ref AWS::AccountId
      DatabaseInput:
        Name: !Join ['-', [!Ref Prefix, !Ref Environment, transactions]]

  TransactionTable:
    Type: AWS::Glue::Table
    Properties:
      CatalogId: !Ref AWS::AccountId
      DatabaseName: !Ref TransactionDB
      TableInput:
        Name: btm_transactions
        TableType: EXTERNAL_TABLE
        Parameters:
          has_encrypted_data: 'true'
          projection.enabled: 'true'
          projection.datetime.type: date
          projection.datetime.range: '2022-01-01,NOW'
          projection.datetime.format: 'yyyy-MM-dd'
          projection.datetime.interval: 1
          projection.datetime.interval.unit: DAYS
          storage.location.template:
            !Join [
              '',
              ['s3://', !Ref StorageBucket, '/btm_transactions/${datetime}/'],
            ]
        PartitionKeys:
          - { Name: 'datetime', Type: date }
        StorageDescriptor:
          Columns:
            - { Name: 'event_id', Type: string }
            - { Name: 'event_name', Type: string }
            - { Name: 'client_id', Type: string }
            - { Name: 'timestamp', Type: timestamp }
            - { Name: 'timestamp_formatted', Type: string }
            - { Name: 'component_id', Type: string }
            - { Name: 'user_transaction_id', Type: string }
            - { Name: 'extensions_iss', Type: string }
          Compressed: true
          InputFormat: 'org.apache.hadoop.mapred.TextInputFormat'
          Location: !Join ['', ['s3://', !Ref StorageBucket, '/']]
          StoredAsSubDirectories: false
          OutputFormat: 'org.apache.hadoop.hive.ql.io.IgnoreKeyTextOutputFormat'
          SerdeInfo:
            Parameters:
              {
                'ignore.malformed.json': true,
                'serialiazation.format': 1,
                'field.delim': '',
              }
            SerializationLibrary: 'org.openx.data.jsonserde.JsonSerDe'

  AthenaWorkgroup:
    Type: AWS::Athena::WorkGroup
    Properties:
      Name: !Join ['-', [!Ref Prefix, !Ref Environment, athena-workgroup]]
      WorkGroupConfiguration:
        EnforceWorkGroupConfiguration: true
        PublishCloudWatchMetricsEnabled: false
        ResultConfiguration:
          EncryptionConfiguration:
            EncryptionOption: 'SSE_KMS'
            KmsKey: !GetAtt KmsKey.Arn
          OutputLocation:
            !Join ['', ['s3://', !Ref AthenaQueryResultsBucket, '/']]

  AthenaQueryResultsBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName:
        !Join ['-', [!Ref Prefix, !Ref Environment, athena-query-results]]
      VersioningConfiguration:
        Status: 'Enabled'
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: aws:kms
              KMSMasterKeyID: !GetAtt KmsKey.Arn
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      LoggingConfiguration:
        DestinationBucketName: !Ref AthenaAccessLogBucket
      LifecycleConfiguration:
        Rules:
          - ExpirationInDays: 7
            Status: Enabled

  AthenaAccessLogBucket:
    # checkov:skip=CKV_AWS_18: This is the access log bucket - no need for another
    Type: AWS::S3::Bucket
    Properties:
      BucketName:
        !Join ['-', [!Ref Prefix, !Ref Environment, athena-query-results-logs]]
      VersioningConfiguration:
        Status: Enabled
      AccessControl: LogDeliveryWrite
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: aws:kms
              KMSMasterKeyID: !GetAtt KmsKey.Arn

  CalculationDataCrawlerRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Join ['-', [!Ref Prefix, !Ref Environment, calc-role]]
      PermissionsBoundary:
        !If [
          UsePermissionsBoundary,
          !Ref PermissionsBoundary,
          !Ref AWS::NoValue,
        ]
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: 'Allow'
            Principal:
              Service:
                - 'glue.amazonaws.com'
            Action:
              - 'sts:AssumeRole'
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/service-role/AWSGlueServiceRole'
      Path: '/'
      Policies:
        - PolicyName: ResourceTypePolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - kms:Decrypt
                  - kms:GenerateDataKey*
                  - kms:Encrypt
                Resource: !GetAtt KmsKey.Arn
              - Effect: Allow
                Action:
                  - s3:ListBucket
                  - s3:GetObject
                  - s3:PutObject
                Resource:
                  - !Join ['/', [!GetAtt ConfigBucket.Arn, '*']]
                  - !Join ['/', [!GetAtt StorageBucket.Arn, '*']]
              - Effect: Allow
                Action:
                  - logs:AssociateKmsKey
                Resource:
                  - !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws-glue/crawlers-role/${Prefix}-${Environment}-calc-role-${Prefix}-${Environment}-crawler-security-config:*

  CrawlerSecurityConfiguration:
    Type: AWS::Glue::SecurityConfiguration
    Properties:
      EncryptionConfiguration:
        CloudWatchEncryption:
          CloudWatchEncryptionMode: SSE-KMS
          KmsKeyArn: !GetAtt KmsKey.Arn
        JobBookmarksEncryption:
          JobBookmarksEncryptionMode: CSE-KMS
          KmsKeyArn: !GetAtt KmsKey.Arn
        S3Encryptions:
          - S3EncryptionMode: SSE-KMS
            KmsKeyArn: !GetAtt KmsKey.Arn
      Name:
        !Join ['-', [!Ref Prefix, !Ref Environment, crawler-security-config]]

  TransactionsCrawler:
    Type: AWS::Glue::Crawler
    Properties:
      CrawlerSecurityConfiguration: !Ref CrawlerSecurityConfiguration
      DatabaseName: !Ref TransactionDB
      Description: Crawls the daily buckets of transaction data
      Name:
        !Join ['-', [!Ref Prefix, !Ref Environment, btm-transactions-crawler]]
      Role: !GetAtt CalculationDataCrawlerRole.Arn
      SchemaChangePolicy:
        DeleteBehavior: LOG
        UpdateBehavior: UPDATE_IN_DATABASE
      Targets:
        S3Targets:
          - Path: !Join ['', ['s3://', !Ref StorageBucket, '/btm_transactions']]

  InvoiceDB:
    Type: AWS::Glue::Database
    Properties:
      CatalogId: !Ref AWS::AccountId
      DatabaseInput:
        Name: !Sub ${Prefix}-${Environment}-invoices

  InvoiceLineItemsTable:
    Type: AWS::Glue::Table
    Properties:
      CatalogId: !Ref AWS::AccountId
      DatabaseName: !Ref InvoiceDB
      TableInput:
        Name: btm_invoices_standardised
        TableType: EXTERNAL_TABLE
        Parameters:
          has_encrypted_data: 'true'
        StorageDescriptor:
          Columns:
            - Name: invoice_receipt_id
              Type: string
            - Name: vendor_name
              Type: string
            - Name: total
              Type: decimal(10,2)
            - Name: invoice_receipt_date
              Type: date
            - Name: subtotal
              Type: decimal(10,2)
            - Name: due_date
              Type: date
            - Name: tax
              Type: decimal(10,2)
            - Name: tax_payer_id
              Type: string
            - Name: item_id
              Type: int
            - Name: item_description
              Type: string
            - Name: unit_price
              Type: decimal(10,2)
            - Name: quantity
              Type: int
            - Name: price
              Type: decimal(10,2)
          Compressed: 'true'
          InputFormat: org.apache.hadoop.mapred.TextInputFormat
          Location: !Sub s3://${StandardisedInvoiceDataBucket}/btm_invoices_standardised/
          StoredAsSubDirectories: false
          OutputFormat: org.apache.hadoop.hive.ql.io.IgnoreKeyTextOutputFormat
          SerdeInfo:
            Parameters:
              field.delim: ''
              ignore.malformed.json: true
              serialiazation.format: 1
            SerializationLibrary: org.openx.data.jsonserde.JsonSerDe

  InvoiceLineItemsView:
    Type: Custom::AthenaView
    Properties:
      ServiceToken: !GetAtt CustomAthenaViewResourceFunction.Arn
      View:
        Database: !Ref InvoiceDB
        Name: !Sub ${Prefix}-${Environment}-invoice-line-items-view
        Query: |
          SELECT
            YEAR(invoice_receipt_date) AS year_received,
            MONTH(invoice_receipt_date) AS month_received,
            vendor_name,
            invoice_receipt_id,
            quantity,
            unit_price,
            price AS invoiced_price,
            SUM(quantity * unit_price) AS calculated_price
          FROM btm_invoices_standardised
          GROUP BY invoice_receipt_id, vendor_name, invoice_receipt_date, item_id, quantity, unit_price, price
        Workgroup: !Ref AthenaWorkgroup
