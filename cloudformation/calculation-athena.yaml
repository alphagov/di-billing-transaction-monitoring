AWSTemplateFormatVersion: '2010-09-09'

Resources:
  CalculationsDB:
    Type: AWS::Glue::Database
    Properties:
      CatalogId: !Ref AWS::AccountId
      DatabaseInput:
        Name: !Sub ${AWS::StackName}-calculations

  TransactionTable:
    Type: AWS::Glue::Table
    Properties:
      CatalogId: !Ref AWS::AccountId
      DatabaseName: !Ref CalculationsDB
      TableInput:
        Name: btm_transactions
        TableType: EXTERNAL_TABLE
        Parameters:
          has_encrypted_data: true
          projection.enabled: true
          projection.datetime.type: date
          projection.datetime.range: 2022-01-01,NOW
          projection.datetime.format: yyyy-MM-dd
          projection.datetime.interval: 1
          projection.datetime.interval.unit: DAYS
          storage.location.template: !Sub s3://${StorageBucket}/btm_transactions/${!datetime}/
        PartitionKeys:
          - { Name: datetime, Type: date }
        StorageDescriptor:
          Columns:
            - { Name: event_id, Type: string }
            - { Name: event_name, Type: string }
            - { Name: client_id, Type: string }
            - { Name: timestamp, Type: timestamp }
            - { Name: timestamp_formatted, Type: string }
            - { Name: component_id, Type: string }
            - { Name: user_transaction_id, Type: string }
            - { Name: extensions_iss, Type: string }
          Compressed: true
          InputFormat: org.apache.hadoop.mapred.TextInputFormat
          Location: !Sub s3://${StorageBucket}/
          StoredAsSubDirectories: false
          OutputFormat: org.apache.hadoop.hive.ql.io.IgnoreKeyTextOutputFormat
          SerdeInfo:
            Parameters:
              ignore.malformed.json: true
              serialization.format: 1
              field.delim: ''
            SerializationLibrary: org.openx.data.jsonserde.JsonSerDe

  RateTableTable:
    Type: AWS::Glue::Table
    Properties:
      CatalogId: !Ref AWS::AccountId
      DatabaseName: !Ref CalculationsDB
      TableInput:
        Name: btm_rate_tables
        TableType: EXTERNAL_TABLE
        Parameters:
          has_encrypted_data: true
          projection.enabled: true
          projection.datetime.type: date
          projection.datetime.range: 2022-01-01,NOW
          projection.datetime.format: yyyy-MM-dd
          projection.datetime.interval: 1
          projection.datetime.interval.unit: DAYS
          storage.location.template: !Sub s3://${ConfigBucket}/rate_tables/prices.csv
        StorageDescriptor:
          Columns:
            - { Name: supplier_client_id, Type: string }
            - { Name: transaction_type_id, Type: string }
            - { Name: volume_min, Type: int }
            - { Name: volume_max, Type: int }
            - { Name: transaction_price, Type: float }
            - { Name: start, Type: timestamp }
          Compressed: true
          InputFormat: org.apache.hadoop.mapred.TextInputFormat
          Location: !Sub s3://${ConfigBucket}/rate_tables/
          StoredAsSubDirectories: false
          OutputFormat: org.apache.hadoop.hive.ql.io.IgnoreKeyTextOutputFormat
          SerdeInfo:
            Parameters:
              field.delim: ','
              skip.header.line.count: 1
              timestamp.formats: yyyy-MM-dd
            SerializationLibrary: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  AthenaTransactionWorkgroup:
    Type: AWS::Athena::WorkGroup
    Properties:
      Name: !Sub ${AWS::StackName}-athena-transaction-workgroup
      WorkGroupConfiguration:
        EnforceWorkGroupConfiguration: true
        PublishCloudWatchMetricsEnabled: false
        ResultConfiguration:
          EncryptionConfiguration:
            EncryptionOption: 'SSE_KMS'
            KmsKey: !GetAtt KmsKey.Arn
          OutputLocation: !Sub s3://${AthenaTransactionQueryResultsBucket}/

  AthenaTransactionQueryResultsBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub ${AWS::StackName}-athena-transaction-query-results
      VersioningConfiguration:
        Status: 'Enabled'
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: aws:kms
              KMSMasterKeyID: !GetAtt KmsKey.Arn
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      LoggingConfiguration:
        DestinationBucketName: !Ref GlobalLogBucket
        LogFilePrefix: athena-transaction-query-results/log
      LifecycleConfiguration:
        Rules:
          - ExpirationInDays: 7
            Status: Enabled

  TransactionView:
    Type: Custom::AthenaView
    Properties:
      ServiceToken: !GetAtt CustomAthenaViewResourceFunction.Arn
      View:
        Database: !Ref CalculationsDB
        Name: !Sub ${AWS::StackName}-transaction-view
        Query: |
          SELECT
            client_id, 
            event_name, 
            month, 
            year, 
            COUNT(*) AS count
          FROM (
            SELECT 
              client_id, 
              event_name, 
              EXTRACT(month FROM datetime) AS month,
              EXTRACT(year FROM datetime) AS year
            FROM btm_transactions
          ) 
          GROUP BY client_id, event_name, month, year
        Workgroup: !Ref AthenaTransactionWorkgroup
